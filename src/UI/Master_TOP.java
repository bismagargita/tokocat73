/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Java.ListTOP;
import Java.koneksi;
import com.mysql.jdbc.Connection;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 7
 */
public class Master_TOP extends javax.swing.JFrame {

    private Java.koneksi koneksi;
    private Connection con;
    private ResultSet hasil;
    private Statement stat;
    DefaultTableModel tabel_model;
    private Java.ListTOP list;
    private int id;
    private String nama_top, bool;
    
    public Master_TOP() {
        initComponents();
        buatTabel();
        fTabel.requestFocusInWindow();
        bool = "false";
    }
    
      

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane12 = new javax.swing.JScrollPane();
        fTabel = new javax.swing.JTable();
        fCari = new javax.swing.JTextField();
        fNew = new javax.swing.JLabel();
        fEdit = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        fTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "No", "Hari"
            }
        ));
        fTabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fTabelMouseClicked(evt);
            }
        });
        fTabel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fTabelKeyPressed(evt);
            }
        });
        jScrollPane12.setViewportView(fTabel);

        fCari.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.gray, java.awt.Color.lightGray, java.awt.Color.lightGray));
        fCari.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fCariMouseClicked(evt);
            }
        });
        fCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fCariActionPerformed(evt);
            }
        });
        fCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fCariKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fCariKeyReleased(evt);
            }
        });

        fNew.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        fNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/if_manilla-folder-new_23456.png"))); // NOI18N
        fNew.setText("F2-New");
        fNew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fNewMouseClicked(evt);
            }
        });
        fNew.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fNewKeyPressed(evt);
            }
        });

        fEdit.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        fEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/if_gtk-edit_20500.png"))); // NOI18N
        fEdit.setText("F3-Edit");
        fEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fEditMouseClicked(evt);
            }
        });
        fEdit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fEditKeyPressed(evt);
            }
        });

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("TOP");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fEdit)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(fCari, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 201, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(196, 196, 196))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fEdit)
                        .addComponent(fNew))
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fCari, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(462, 495));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void fCariMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fCariMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fCariMouseClicked

    private void fNewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fNewMouseClicked
        hapusTabel();
        buatTabel();
        Master_TOP_tambahTOP top=new Master_TOP_tambahTOP();
        top.setVisible(true);
        top.setFocusable(true);
        list = new ListTOP();
        list.setId_top(0);
        list.setNama_top("");
    }//GEN-LAST:event_fNewMouseClicked

    private void fEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fEditMouseClicked
        bool = "true";
        if("true".equals(bool)){
            hapusTabel();
            buatTabel();
            Master_TOP_tambahTOP top=new Master_TOP_tambahTOP();
            top.setVisible(true);
            list = new ListTOP();
            list.setId_top(id);
            list.setNama_top(nama_top);
        }else{
            JOptionPane.showMessageDialog(null, "Pilih salah satu data di tabel terlebih dahulu");
        }
    }//GEN-LAST:event_fEditMouseClicked

    private void fCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fCariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fCariActionPerformed

    private void fTabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fTabelMouseClicked
        ambilDataTabel();
        bool = "true";
    }//GEN-LAST:event_fTabelMouseClicked

    private void fCariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fCariKeyReleased
        try{
            hapusTabel();
            String query= "SELECT id_top, nama_top FROM top where nama_top like '%"+fCari.getText()+"%'";
            con = (Connection) koneksi.Connect();
            hasil = koneksi.ambilData(query);
            String Object[] = new String[1];
            System.out.println("///");
            while (hasil.next()){
                    tabel_model.addRow(new Object[] {hasil.getString(1),hasil.getString(2)});

            }
            }catch (Exception e) {
        }
    }//GEN-LAST:event_fCariKeyReleased

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        hapusTabel();
        buatTabel();                                    
        
    }//GEN-LAST:event_formWindowOpened

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        hapusTabel();
        buatTabel();
    }//GEN-LAST:event_formWindowGainedFocus

    private void fCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fCariKeyPressed
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {     
           fTabel.requestFocusInWindow();
           bool ="true";
       }
         if (evt.getKeyCode()==KeyEvent.VK_F2) {
            hapusTabel();
            buatTabel();
            Master_TOP_tambahTOP top=new Master_TOP_tambahTOP();
            top.setVisible(true);
            top.setFocusable(true);
            list = new ListTOP();
            list.setId_top(0);
            list.setNama_top("");
        }
        if (evt.getKeyCode()==KeyEvent.VK_F3) {
            bool = "true";
            if("true".equals(bool)){
                hapusTabel();
                buatTabel();
                Master_TOP_tambahTOP top=new Master_TOP_tambahTOP();
                top.setVisible(true);
                list = new ListTOP();
                list.setId_top(id);
                list.setNama_top(nama_top);
            }else{
                JOptionPane.showMessageDialog(null, "Pilih salah satu data di tabel terlebih dahulu");
            }
        }
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
            setVisible(false);
        }
    }//GEN-LAST:event_fCariKeyPressed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_F2) {
            hapusTabel();
            buatTabel();
            Master_TOP_tambahTOP top=new Master_TOP_tambahTOP();
            top.setVisible(true);
            top.setFocusable(true);
            list = new ListTOP();
            list.setId_top(0);
            list.setNama_top("");
        }
        if (evt.getKeyCode()==KeyEvent.VK_F3) {
            bool = "true";
            if("true".equals(bool)){
                hapusTabel();
                buatTabel();
                Master_TOP_tambahTOP top=new Master_TOP_tambahTOP();
                top.setVisible(true);
                list = new ListTOP();
                list.setId_top(id);
                list.setNama_top(nama_top);
            }else{
                JOptionPane.showMessageDialog(null, "Pilih salah satu data di tabel terlebih dahulu");
            }
        }
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
            setVisible(false);
        }
    }//GEN-LAST:event_formKeyPressed

    private void fTabelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fTabelKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_F2) {
            hapusTabel();
            buatTabel();
            Master_TOP_tambahTOP top=new Master_TOP_tambahTOP();
            top.setVisible(true);
            top.setFocusable(true);
            list = new ListTOP();
            list.setId_top(0);
            list.setNama_top("");
        }
        if (evt.getKeyCode()==KeyEvent.VK_F3) {
            bool = "true";
            if("true".equals(bool)){
                ambilDataTabel();
                hapusTabel();
                buatTabel();
                Master_TOP_tambahTOP top=new Master_TOP_tambahTOP();
                top.setVisible(true);
                list = new ListTOP();
                list.setId_top(id);
                list.setNama_top(nama_top);
            }else{
                JOptionPane.showMessageDialog(null, "Pilih salah satu data di tabel terlebih dahulu");
            }
        }
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
            setVisible(false);
        }
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) {
            bool = "true";
            if("true".equals(bool)){
                ambilDataTabel();
                hapusTabel();
                buatTabel();
                Master_TOP_tambahTOP top=new Master_TOP_tambahTOP();
                top.setVisible(true);
                list = new ListTOP();
                list.setId_top(id);
                list.setNama_top(nama_top);
            }else{
                JOptionPane.showMessageDialog(null, "Pilih salah satu data di tabel terlebih dahulu");
            }
        }
        if (evt.getKeyCode()==KeyEvent.VK_DOWN || evt.getKeyCode()==KeyEvent.VK_UP) {
            bool="true";
        }
    }//GEN-LAST:event_fTabelKeyPressed

    private void fNewKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fNewKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
            setVisible(false);
        }
    }//GEN-LAST:event_fNewKeyPressed

    private void fEditKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fEditKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) {
            setVisible(false);
        }
    }//GEN-LAST:event_fEditKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Master_TOP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Master_TOP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Master_TOP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Master_TOP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Master_TOP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fCari;
    private javax.swing.JLabel fEdit;
    private javax.swing.JLabel fNew;
    private javax.swing.JTable fTabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    // End of variables declaration//GEN-END:variables

    private void buatTabel(){
        tabel_model = new DefaultTableModel();
        tabel_model.addColumn("Id");
        tabel_model.addColumn("TOP");
        fTabel.setModel(tabel_model);
        //Untuk mengatur lebar kolom
        fTabel.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        fTabel.getColumnModel().getColumn(0).setPreferredWidth(30);
        fTabel.getColumnModel().getColumn(1).setPreferredWidth(389); 
        fTabel.getColumnModel().getColumn(0).setMinWidth(30);
        fTabel.getColumnModel().getColumn(1).setMinWidth(389); 
        tampil();
    }
    
    private void tampil(){
       try {
            String query ="select id_top, nama_top from top";
            System.out.println("///");
            koneksi = new koneksi();
            con = (Connection) koneksi.Connect();
            hasil = koneksi.ambilData(query);
            String Object[] = new String[1];
            System.out.println("///");
            while (hasil.next()){
                    tabel_model.addRow(new Object[] {hasil.getString(1),hasil.getString(2)});

            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Data tidak ditemukan");
            System.out.println(e);
        }
    }
    
     public void ambilDataTabel(){
        int row= fTabel.getSelectedRow();
        id  = (Integer.parseInt((String) fTabel.getValueAt(row, 0)));
        nama_top = ((String)fTabel.getValueAt(row, 1));
        System.out.println("ida"+id);
    }

    private void hapusTabel(){
      int row = tabel_model.getRowCount();
      for (int i=0; i<row; i++){
          tabel_model.removeRow(0);
      }
    }

    
}
